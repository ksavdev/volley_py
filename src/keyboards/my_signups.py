from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import Sequence
from src.models.signup import Signup, SignupStatus
from src.utils.helpers import local


def list_kb(signups: Sequence[Signup]) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö (pending/accepted) –∑–∞—è–≤–æ–∫ –∏–≥—Ä–æ–∫–∞.
    """
    rows: list[list[InlineKeyboardButton]] = []
    active_statuses = {SignupStatus.pending, SignupStatus.accepted}

    for s in signups:
        if s.status not in active_statuses:
            continue

        ann  = s.announcement
        dt   = local(ann.datetime).strftime("%d.%m %H:%M")
        hall = ann.hall.name
        text = f"{hall} ‚Ä¢ {dt} ‚Ä¢ {s.status.name}"
        rows.append([InlineKeyboardButton(text=text, callback_data=f"myreq_{s.id}")])

    if not rows:
        rows.append(
            [InlineKeyboardButton(text="–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫", callback_data="noop")]
        )

    # –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    rows.append([InlineKeyboardButton(text="¬´ –ù–∞–∑–∞–¥", callback_data="main_back")])
    return InlineKeyboardMarkup(inline_keyboard=rows)


def confirm_cancel_kb(signup_id: int) -> InlineKeyboardMarkup:
    """
    –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–º–µ–Ω—ã –∑–∞—è–≤–∫–∏.
    """
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üö´ –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É",
                    callback_data=f"cancel_{signup_id}",
                )
            ],
            [InlineKeyboardButton(text="¬´ –ù–∞–∑–∞–¥", callback_data="my_back")],
        ]
    )
