from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import Sequence
from src.models.signup import Signup, SignupStatus


def list_kb(signups: Sequence[Signup]) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ –∏–≥—Ä–æ–∫–∞, –≤–∫–ª—é—á–∞—è –æ—Ç–∫–ª–æ–Ω—ë–Ω–Ω—ã–µ.
    """
    from src.handlers.my_signups import status_labels  # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ

    rows: list[list[InlineKeyboardButton]] = []

    for s in signups:
        ann  = s.announcement
        dt   = ann.datetime.strftime("%d.%m %H:%M")
        hall = ann.hall.name
        status = status_labels.get(s.status, s.status.name)
        text = f"{hall} ‚Ä¢ {dt} ‚Ä¢ {status}"
        rows.append([InlineKeyboardButton(text=text, callback_data=f"myreq_{s.id}")])

    if not rows:
        rows.append(
            [InlineKeyboardButton(text="–ù–µ—Ç –∑–∞—è–≤–æ–∫", callback_data="noop")]
        )

    return InlineKeyboardMarkup(inline_keyboard=rows)


def confirm_cancel_kb(signup_id: int) -> InlineKeyboardMarkup:
    """
    –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–º–µ–Ω—ã –∑–∞—è–≤–∫–∏.
    """
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üö´ –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É",
                    callback_data=f"cancel_{signup_id}",
                )
            ],
            [InlineKeyboardButton(text="¬´ –ù–∞–∑–∞–¥", callback_data="my_back")],
        ]
    )
    
